# -- Private image registry configuration
imageCredentials:
  # -- Use private authentication mode
  enabled: false
  # -- If this is set, chart will not generate a secret but will use what is defined here
  existingSecret: ""
  # -- Registry name
  registry: docker.io
  # -- Registry username
  username: someone
  # -- Registry password
  password: pwd
  # -- Email
  email: someone@host.com

# -- ClearMl generic configurations
clearml:
  apiAccessKey: "ClearML API Access Key"
  apiSecretKey: "ClearML API Secret Key"
  apiHost: http://clearml-server-apiserver:8008
  filesHost: http://clearml-server-fileserver:8081
  webHost: http://clearml-server-webserver:80
  defaultBaseServeUrl: http://127.0.0.1:8080/serve
  servingTaskId: "ClearML Serving Task ID"
  kafkaServeUrl: ""

# -- ClearML serving statistics configurations
clearml_serving_statistics:
  # -- Enable ClearML Serving Statistics
  enabled: true
  # -- Container Image
  image:
    repository: "allegroai/clearml-serving-statistics"
    tag: "1.3.0"
  # -- Node Selector configuration
  nodeSelector: {}
  # -- Tolerations configuration
  tolerations: []
  # -- Affinity configuration
  affinity: {}
  # -- Pod resources definition
  resources: {}
  extraEnvironment: []
  # -- Extra Python Packages to be installed in running pods
  extraPythonPackages: []
  #  - numpy==1.22.4
  #  - pandas==1.4.2
  # -- reference for files declared in existing ConfigMap will be mounted and read by pod (examples in values.yaml)
  existingAdditionalConfigsConfigMap: ""
  # -- reference for files declared in existing Secret will be mounted and read by pod (examples in values.yaml) if not overridden by existingAdditionalConfigsConfigMap
  existingAdditionalConfigsSecret: ""
  # -- files declared in this parameter will be mounted on internal folder /opt/clearml/config and read by pod (examples in values.yaml) if not overridden by existingAdditionalConfigsSecret
  additionalConfigs: {}
  #   additionalFile.conf: |
  #     <filecontent>

# -- ClearML serving inference configurations
clearml_serving_inference:
  # -- Container Image
  image:
    repository: "allegroai/clearml-serving-inference"
    tag: "1.3.0"
  # -- Node Selector configuration
  nodeSelector: {}
  # -- Tolerations configuration
  tolerations: []
  # -- Affinity configuration
  affinity: {}
  # -- Pod resources definition
  resources: {}
  # -- Extra environment variables
  extraEnvironment: []
  # -- Extra Python Packages to be installed in running pods
  extraPythonPackages: []
  #  - numpy==1.22.4
  #  - pandas==1.4.2
  # -- reference for files declared in existing ConfigMap will be mounted and read by pod (examples in values.yaml)
  existingAdditionalConfigsConfigMap: ""
  # -- reference for files declared in existing Secret will be mounted and read by pod (examples in values.yaml) if not overridden by existingAdditionalConfigsConfigMap
  existingAdditionalConfigsSecret: ""
  # -- files declared in this parameter will be mounted on internal folder /opt/clearml/config and read by pod (examples in values.yaml) if not overridden by existingAdditionalConfigsSecret
  additionalConfigs: {}
  #   additionalFile.conf: |
  #     <filecontent>
  # -- Autoscaling configuration
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 11
    targetCPU: 50
    targetMemory: 50
  # -- Ingress exposing configurations
  ingress:
    # -- Enable/Disable ingress
    enabled: false
    # -- ClassName (must be defined if no default ingressClassName is available)
    ingressClassName: ""
    # -- Ingress hostname domain
    hostName: "serving.clearml.127-0-0-1.nip.io"
    # -- Reference to secret containing TLS certificate. If set, it enables HTTPS on ingress rule.
    tlsSecretName: ""
    # -- Ingress annotations
    annotations: {}
    # -- Ingress root path url
    path: "/"

# -- ClearML serving Triton configurations
clearml_serving_triton:
  # -- Triton pod creation enable/disable
  enabled: true
  # -- Container Image
  image:
    repository: "allegroai/clearml-serving-triton"
    tag: "1.3.0"
  # -- Node Selector configuration
  nodeSelector: {}
  # -- Tolerations configuration
  tolerations: []
  # -- Affinity configuration
  affinity: {}
  # -- Pod resources definition
  resources: {}
  # -- Extra environment variables
  extraEnvironment: []
  # -- Extra Python Packages to be installed in running pods
  extraPythonPackages: []
  #  - numpy==1.22.4
  #  - pandas==1.4.2
  # -- reference for files declared in existing ConfigMap will be mounted and read by pod (examples in values.yaml)
  existingAdditionalConfigsConfigMap: ""
  # -- reference for files declared in existing Secret will be mounted and read by pod (examples in values.yaml) if not overridden by existingAdditionalConfigsConfigMap
  existingAdditionalConfigsSecret: ""
  # -- files declared in this parameter will be mounted on internal folder /opt/clearml/config and read by pod (examples in values.yaml) if not overridden by existingAdditionalConfigsSecret
  additionalConfigs: {}
  #   additionalFile.conf: |
  #     <filecontent>
  # -- Autoscaling configuration
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 11
    targetCPU: 50
    targetMemory: 50
  # -- Ingress exposing configurations
  ingress:
    # -- Enable/Disable ingress
    enabled: false
    # -- ClassName (must be defined if no default ingressClassName is available)
    ingressClassName: ""
    # -- Ingress hostname domain
    hostName: "serving-grpc.clearml.127-0-0-1.nip.io"
    # -- Reference to secret containing TLS certificate. If set, it enables HTTPS on ingress rule.
    tlsSecretName: ""
    # -- Ingress annotations
    annotations: {}
    # -- Ingress root path url
    path: "/"

# -- Configuration from https://github.com/bitnami/charts/blob/main/bitnami/kafka/values.yaml
kafka:
  enabled: true

# -- Configuration from https://github.com/prometheus-community/helm-charts/blob/main/charts/prometheus/values.yaml
prometheus:
  enabled: true
  kube-state-metrics:
    enabled: false
  prometheus-node-exporter:
    enabled: false
  prometheus-pushgateway:
    enabled: false
  serverFiles:
    prometheus.yml:
      scrape_configs:
        - job_name: prometheus
          static_configs:
            - targets:
              - localhost:9090
  extraScrapeConfigs: |
    - job_name: "{{ .Release.Name }}-stats"
      static_configs:
        - targets:
          - "{{ .Release.Name }}-statistics:9999"

# -- Configuration from https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml
grafana:
  enabled: true
  adminUser: admin
  adminPassword: clearml
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Prometheus
        type: prometheus
        url: "http://{{ .Release.Name }}-prometheus-server"
        access: proxy
        isDefault: true
